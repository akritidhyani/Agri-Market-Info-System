# -*- coding: utf-8 -*-
"""python project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18WxE07VZLhaPGuUYtQ2s1SoMo1nY1Zd6
"""

import pandas as pd
from getpass import getpass
import os
import glob
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

def get_excel_files_name(folder_path):
    pattern = os.path.join(folder_path, '*.xlsx')
    excel_files = glob.glob(pattern)

    # Extract only the file names without the ".xlsx" extension
    get_excel_files_name = [os.path.splitext(os.path.basename(file))[0] for file in excel_files]

    return get_excel_files_name

def market_price():
    #optional
    #market_list = ["DEHRADUN", "RISHIKESH"]
    #df = pd.DataFrame(market_list , columns= ["AVAILABLE MANDI PRICE"])
    #display(df)
    ##crop = input("Crop Name: ").upper()

    folder_path =  r"/content/drive/MyDrive/PYTHON"

    market_price_excel_list = get_excel_files_name(folder_path)

    market_list = [market.upper() for market in market_price_excel_list]
    df = pd.DataFrame(market_list , columns= ["AVAILABLE MANDI PRICE"])
    display(df)

    while True:
        crop = input("Crop Name: ").upper()
        market = input("Market Name: ").upper()
        market_1 = market.lower()

        if market in market_list:
            data_frame = pd.read_excel(r"/content/drive/MyDrive/PYTHON/{}.xlsx".format(market_1))
            crop_name = data_frame['CROP']
            crop_list = data_frame['CROP'].tolist()

            if crop in crop_list:
                filtered_data = data_frame[(data_frame['CROP'] == crop)]
                price = filtered_data.iloc[0]['MARKET PRICE']
                print(" ")
                print(f"The market price of {crop} in {market} is: {price}")
                print(" ")
                break
            else:
                print(" ")
                print(f"The market price is {crop} in {market} is not available ")
                break

        else:
            print(f"The market information of {market} is not available ")
            break

def admin():

    while True:
        a = getpass("Enter Password: ")
        password = "admin"
        if a == password:
            while True:
                print("-------------------------------------")
                print("Add new data: 1")
                print("To logout: PRESS any integer key")
                ent = int(input("Enter your choice: "))

                if  ent == 1:
                    market = input("Enter Market Name: ")
                    crop = input("Enter Crop Name: ")
                    price = input("Enter Price Information: ")
                    if price.isnumeric() == True:
                        new_data = {
                            "CROP": [crop.upper()],
                            "MARKET PRICE": [price]
                        }
                        new_df = pd.DataFrame(new_data)

                        file_path = r"/content/drive/MyDrive/PYTHON/{}.xlsx".format(market)

                        try:
                            existing_df = pd.read_excel(file_path)

                            merged_df = existing_df.append(new_df, ignore_index=True)

                        except FileNotFoundError:
                            merged_df = new_df # If the file doesn't exist, create a new DataFrame with the new data

                        merged_df.to_excel(file_path, index=False)


                    else:
                        print("")
                        print("Enter Correct Price Information!!")
                        print("")
                else:
                    break

            break

        else:
            print("Enter Correct Password")

#if we give crop which dose not exist as an input its not showing the expected output

def compare_market_prices():

    crop = input("Crop Name: ").upper()
    folder_path =  r"/content/drive/MyDrive/PYTHON"

    market_price_excel_list = get_excel_files_name(folder_path)

    market_list = [market.upper() for market in market_price_excel_list]
    print(pd.DataFrame(market_list))

    DATA_PATH = os.path.join(folder_path, "{}.xlsx")

    # Create an empty DataFrame to store market prices
    comparison_df = pd.DataFrame(columns=["Market", "Price"])

    for market in market_list:
        file_path = DATA_PATH.format(market)

        if os.path.exists(file_path):
            data_frame = pd.read_excel(file_path)
            filtered_data = data_frame[data_frame['CROP'] == crop]

            if not filtered_data.empty:
                price = filtered_data.iloc[0]['MARKET PRICE']
                comparison_df = comparison_df.append({"Market": market, "Price": price}, ignore_index=True)
            else:
                # If no data is available for the market, add NaN to indicate missing value
                comparison_df = comparison_df.append({"Market": market, "Price": float('nan')}, ignore_index=True)

    if not comparison_df.empty:
        # Plotting the bar chart with different colors
        colors = plt.cm.viridis(range(len(comparison_df)))
        plt.figure(figsize=(8, 6))
        bars = plt.bar(comparison_df["Market"], comparison_df["Price"], color=colors)

        # Display prices over the bars
        for bar, price in zip(bars, comparison_df["Price"]):
            plt.text(bar.get_x() + bar.get_width() / 2, bar.get_height() - 0.1, str(price), ha='center', va='bottom')

        plt.title(f'Market Prices for {crop}')
        plt.xlabel('Market')
        plt.ylabel('Price')
        plt.show()
    else:
        print(f"No data available for {crop} in the specified markets.")

print("............................AGRICULTURE MARKET INFORMATION SYSTEM...........................")
print(" ")
print(" ")
print("Press ENTER to proceed")
portal = input()
print("\n")
while True:
    print(" ")
    print("------------------------------------------------")
    print(" ")
    print("""ENTER YOUR CHOICE
         Market Price: 1
         Compare Market Price: 2
         Admin Login: 3
         Exit: Press any other integer Key"""
         )
    entry = int(input("--> "))

    if entry == 1:
        market_price()
    elif entry == 2:
         compare_market_prices()
    elif entry == 3:
        admin()
    else:
        print("Thank you for using our service :-)")
        break